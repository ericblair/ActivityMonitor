//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// Architectural overview and usage guide: 
// http://blogofrab.blogspot.com/2010/08/maintenance-free-mocking-for-unit.html
//------------------------------------------------------------------------------
using System.Data.EntityClient;
using System.Data.Objects;

namespace ActivityMonitor
{
    /// <summary>
    /// The functional concrete object context. This is just like the normal
    /// context that would be generated using the POCO artefact generator, 
    /// apart from the fact that this one implements an interface containing 
    /// the entity set properties and exposes <code>IObjectSet</code>
    /// instances for entity set properties.
    /// </summary>
    public partial class ReportingEntities : ObjectContext, IReportingEntities 
    {
        public const string ConnectionString = "name=ReportingEntities";
        public const string ContainerName = "ReportingEntities";
    
        #region Constructors
    
        public ReportingEntities():
            base(ConnectionString, ContainerName)
        {
            this.ContextOptions.LazyLoadingEnabled = true;
        }
    
        public ReportingEntities(string connectionString):
            base(connectionString, ContainerName)
        {
            this.ContextOptions.LazyLoadingEnabled = true;
        }
    
        public ReportingEntities(EntityConnection connection):
            base(connection, ContainerName)
        {
            this.ContextOptions.LazyLoadingEnabled = true;
        }
    
        #endregion
    
        #region ObjectSet Properties
    
        public IObjectSet<tbDailyActivityGP> tbDailyActivityGP
        {
            get { return _tbDailyActivityGP ?? (_tbDailyActivityGP = CreateObjectSet<tbDailyActivityGP>("tbDailyActivityGP")); }
        }
        private ObjectSet<tbDailyActivityGP> _tbDailyActivityGP;
    
        public IObjectSet<tbHealthBoardContacts> tbHealthBoardContacts
        {
            get { return _tbHealthBoardContacts ?? (_tbHealthBoardContacts = CreateObjectSet<tbHealthBoardContacts>("tbHealthBoardContacts")); }
        }
        private ObjectSet<tbHealthBoardContacts> _tbHealthBoardContacts;
    
        public IObjectSet<tbInactiveSites> tbInactiveSites
        {
            get { return _tbInactiveSites ?? (_tbInactiveSites = CreateObjectSet<tbInactiveSites>("tbInactiveSites")); }
        }
        private ObjectSet<tbInactiveSites> _tbInactiveSites;
    
        public IObjectSet<tbMsg> tbMsg
        {
            get { return _tbMsg ?? (_tbMsg = CreateObjectSet<tbMsg>("tbMsg")); }
        }
        private ObjectSet<tbMsg> _tbMsg;
    
        public IObjectSet<tbOrganisation> tbOrganisation
        {
            get { return _tbOrganisation ?? (_tbOrganisation = CreateObjectSet<tbOrganisation>("tbOrganisation")); }
        }
        private ObjectSet<tbOrganisation> _tbOrganisation;
    
        public IObjectSet<tbOrgSupplier> tbOrgSupplier
        {
            get { return _tbOrgSupplier ?? (_tbOrgSupplier = CreateObjectSet<tbOrgSupplier>("tbOrgSupplier")); }
        }
        private ObjectSet<tbOrgSupplier> _tbOrgSupplier;
    
        public IObjectSet<tbSupplierContacts> tbSupplierContacts
        {
            get { return _tbSupplierContacts ?? (_tbSupplierContacts = CreateObjectSet<tbSupplierContacts>("tbSupplierContacts")); }
        }
        private ObjectSet<tbSupplierContacts> _tbSupplierContacts;
    
        public IObjectSet<tbMigratingSites> tbMigratingSites
        {
            get { return _tbMigratingSites1 ?? (_tbMigratingSites1 = CreateObjectSet<tbMigratingSites>("tbMigratingSites1")); }
        }
        private ObjectSet<tbMigratingSites> _tbMigratingSites1;

        #endregion
    }
}
