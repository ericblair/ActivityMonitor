//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// Architectural overview and usage guide: 
// http://blogofrab.blogspot.com/2010/08/maintenance-free-mocking-for-unit.html
//------------------------------------------------------------------------------
using System.Data.EntityClient;
using System.Data.Objects;

namespace ActivityMonitor
{
    /// <summary>
    /// The interface for the specialised object context. This contains all of
    /// the <code>ObjectSet</code> properties that are implemented in both the
    /// functional context class and the mock context class.
    /// </summary>
    public interface IReportingEntities
    {
        IObjectSet<tbDailyActivityGP> tbDailyActivityGP { get; }
        IObjectSet<tbHealthBoardContacts> tbHealthBoardContacts { get; }
        IObjectSet<tbInactiveSites> tbInactiveSites { get; }
        IObjectSet<tbMsg> tbMsg { get; }
        IObjectSet<tbOrganisation> tbOrganisation { get; }
        IObjectSet<tbOrgSupplier> tbOrgSupplier { get; }
        IObjectSet<tbSupplierContacts> tbSupplierContacts { get; }
        // Had to implement the following myself (for testing)
        int SaveChanges();
        void DeleteObject(object entity);
    }
}
