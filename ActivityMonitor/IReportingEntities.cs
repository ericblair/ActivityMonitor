//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// Architectural overview and usage guide: 
// http://blogofrab.blogspot.com/2010/08/maintenance-free-mocking-for-unit.html
//------------------------------------------------------------------------------
using System.Data.EntityClient;
using System.Data.Objects;

namespace ActivityMonitor
{
    /// <summary>
    /// The interface for the specialised object context. This contains all of
    /// the <code>ObjectSet</code> properties that are implemented in both the
    /// functional context class and the mock context class.
    /// </summary>
    public interface IReportingEntities
    {
        IObjectSet<tbRPT_DailyActivityGP> tbRPT_DailyActivityGP { get; }
        IObjectSet<tbEPS_Msg> tbEPS_Msg { get; }
        IObjectSet<tbEPS_Organisation> tbEPS_Organisation { get; }
        IObjectSet<tbRPT_HealthBoardContacts> tbRPT_HealthBoardContacts { get; }
        IObjectSet<tbRPT_InactiveSites> tbRPT_InactiveSites { get; }
        IObjectSet<tbRPT_MigratingSites> tbRPT_MigratingSites { get; }
        IObjectSet<tbRPT_OrgSupplier> tbRPT_OrgSupplier { get; }
        IObjectSet<tbRPT_SupplierContacts> tbRPT_SupplierContacts { get; }
        IObjectSet<tbRPT_PRSErrorMonitor> tbRPT_PRSErrorMonitor { get; }

        // Added the following myself
        int SaveChanges();
        void DeleteObject(object entity);
    }
}
